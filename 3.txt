public class UserService : IUserService
{
    private readonly ISqlSugarClient _db;

    public UserService(ISqlSugarClient db)
    {
        _db = db;
        _db.CodeFirst.InitTables(typeof(User));
    }

    public async Task<bool> LoginAsync(string account, string password)
    {
        return await _db.Queryable<User>().Where(it => it.Account.Contains(account)
        && it.Password.Contains(password)).AnyAsync();
       
    }
}

public interface IUserService
{
    Task<bool> LoginAsync(string account, string password);
}


[SugarTable("user")]
public class User
{
    [SugarColumn(ColumnName = "id", IsPrimaryKey = true, IsIdentity = true)]
    public int Id { get; set; }

    [SugarColumn(ColumnName = "account", Length = 100, ColumnDescription = "账号")]
    public string Account { get; set; }

    [SugarColumn(ColumnName = "password", Length = 100, ColumnDescription = "密码")]
    public string Password{ get; set; }
}


public partial class frmUserLogin : Form
{
    private readonly IUserService _userService;
    public frmUserLogin(IUserService userService)
    {
        InitializeComponent();
        _userService = userService;
    }

    private async void btnLogin_Click(object sender, EventArgs e)
    {
        var account = tbAccount.Text.Trim();
        var password = tbPassword.Text.Trim();

        var ret = await _userService.LoginAsync(account, password);
        if (ret)
        {
            MessageBox.Show("登录成功！");
            var frm = Native.CreateInstance<frmBooks>();
            frm.Show();
        }
        else
        {
            MessageBox.Show("账号或密码错误！");
        }
       
    }
}

结束 听歌

